
01. Sélectionner toutes les colonnes de la table SERV

SELECT * FROM `serv`
02. Sélectionner d’une autre manière ces colonnes

SELECT noserv, service, ville FROM `serv`

03. Sélectionner les colonnes SERVICE et NOSERV de la table serve

SELECT noserv, service FROM `serv`

04.  Sélectionner toutes les colonnes de la table EMP

SELECT * FROM `emp`

05. Sélectionner les emplois de la table EMP

SELECT emploi FROM `emp`

06.  Sélectionner les différents emplois de la table Emp

SELECT DISTINCT emploi FROM `emp`
07. Sélectionner les employés du service N3

SELECT * FROM `emp` WHERE noserv = 3

08. Sélectionner les noms, prénoms, numéro d’employé, numéro de service de tous les techniciens

SELECT nom, prenom, noemp, noserv FROM `emp` WHERE emploi='technicien'

09. électionner les noms, numéros de service de tous les services dont le numéro 
est supérieur à 2

SELECT nom, noserv FROM `emp` WHERE noserv>2

10. électionner les noms, numéros de service de tous les services dont le numéro 
est supérieur à 2

SELECT nom, noserv FROM `emp` WHERE noserv>=2

11. Sélectionner les employés dont la commission est inférieure au salaire. 

SELECT * FROM `emp` WHERE comm<sal
12. Sélectionner les employés qui ne touchent jamais de 
commission
SELECT * FROM `emp` WHERE comm IS NULL;

13. Sélectionner les employés qui touchent éventuellement une 
commission et dans l’ordre croissant des commissions

SELECT * FROM `emp` WHERE comm IS NOT NULL ORDER BY comm;

14. selectionner qui ont un chef
SELECT * FROM `emp` WHERE sup IS NOT NULL;

15. selectionner qui ont PAS un chef

SELECT * FROM `emp` WHERE sup IS NULL;

16.: Sélectionner les noms, emploi, salaire, numéro de service de tous les employés 
du service 5 qui gagnent plus de 20000

SELECT nom, prenom, emploi,sal, noserv FROM `emp` WHERE noserv=5 AND sal>20000;

17.  Sélectionner les vendeurs du service 6 qui ont un revenu mensuel supérieur ou 
égal à 9500
SELECT * FROM `emp` WHERE emploi='VENDEUR' AND noserv=6 AND sal>9500;

18. Sélectionner dans les employés tous les présidents et directeurs.
 SELECT * FROM `emp` WHERE emploi='president' OR emploi='directeur';

19. Sélectionner les directeurs qui ne sont pas dans le servic 3
SELECT * FROM `emp` WHERE emploi='directeur' AND noserv!=3;
20. Sélectionner les directeurs et « les techniciens du service 1

SELECT * FROM `emp` WHERE emploi='directeur' OR (emploi='technicien' AND noserv=1);
21. Sélectionner les « directeurs et les techniciens » du service 1

SELECT * FROM `emp` WHERE (emploi='directeur' OR emploi='technicien') AND noserv=1;
22. Sélectionner les employés du service 1 qui sont directeurs ou techniciens
SELECT * FROM `emp` WHERE noserv=1 and (emploi='directeur' OR emploi='technicien');
23. Sélectionner les employés qui ne sont ni directeur, ni technicien et travaillant dans le service 1
SELECT * FROM `emp` WHERE noserv=1 and (emploi !='directeur' OR emploi!='technicien');
24. : Sélectionner les employés qui sont techniciens, comptables ou vendeur
SELECT * FROM `emp` WHERE emploi IN ('technicien', 'vendeur', 'comptable');
25. Sélectionner les employés qui NOT sont techniciens, comptables ou vendeur
SELECT * FROM `emp` WHERE emploi NOT IN ('technicien', 'vendeur', 'comptable');
26;  Sélectionner les directeurs des services 2, 4 et 5

SELECT * FROM `emp` WHERE emploi='directeur' AND noserv IN (2,4,5);
27 électionner les subalternes qui ne sont pas dans les services 1,3,5
SELECT * FROM `emp` WHERE sup!=NULL OR noserv NOT IN (1,3,5);
28. selectionner les employés qui gagnent entre 20,000 et 40,000 euros, bornes compris
SELECT * FROM `emp` WHERE sal BETWEEN 20000 AND 40000;
29. Sélectionner les employés qui gagnent moins de 20000 et plus de 40000
SELECT * FROM `emp` WHERE sal NOT BETWEEN 20000 AND 40000;
30; Sélectionner les employés qui ne sont pas directeur et qui ont été embauchés en 88;

SELECT * FROM `emp` WHERE emploi!='directeur' AND embauche LIKE '%88%';

31 ectionner les directeurs des services 2 ,3 , 4, 5 sans le IN

SELECT * FROM `emp` WHERE emploi='directeur' AND noserv BETWEEN 2 AND 5;

32;Sélectionner les employés dont le nom commence par la lettre M

SELECT * FROM `emp` WHERE nom LIKE "M%";
33. Sélectionner les employés dont le nom se termine par T
SELECT * FROM `emp` WHERE nom LIKE "%T";
34. Sélectionner les employés ayant au moins deux E 
SELECT * FROM `emp` WHERE nom LIKE "%E%E%";
35; Sélectionner les employés ayant exactement un E dans leur

SELECT * FROM `emp` WHERE nom LIKE "%E%" AND nom NOT LIKE "%E%E%"

36  Sélectionner les employés ayant au moins un N et un O 

SELECT * FROM `emp` WHERE nom LIKE "%N%O%";
37 Sélectionner les employés dont le nom s'écrit avec 6 caractères et qui se termine N
SELECT * FROM `emp` WHERE nom LIKE "_____N";
38. Sélectionner les employés dont la troisième lettre du nom est un R
SELECT * FROM `emp` WHERE nom LIKE "__R%";
39 Sélectionner les employés dont le nom ne s'écrit pas avec 5

SELECT * FROM `emp` WHERE nom NOT LIKE "_____";


40.  service, salaire) du service 3 par ordre de salaire 
SELECT nom, prenom, noserv, sal FROM `emp` WHERE noserv=3 ORDER BY sal;
41 e service , salaire) du service 3 par ordre decrossant
SELECT nom, prenom, noserv, sal FROM `emp` WHERE noserv=3 ORDER BY sal DESC;
42 Idem en indiquant le numéro de colonne à la place du nom colonne

SELECT nom, prenom, noserv, sal FROM `emp` WHERE noserv=3 ORDER BY 4;

43 Trier les employés (nom, prénom, n° de service, salaire, emploi) par emploi, et pour
chaque emploi par ordre décroissant de salaire.
SELECT nom, prenom, noserv, sal, emploi FROM `emp` ORDER BY emploi DESC;

44 Idem en indiquant les numéros de colonnes 

SELECT nom, prenom, noserv, sal, emploi FROM `emp` ORDER BY 5 DESC;

45 Trier les employés (nom, prénom, n° de service, commission) du service 3 par ordre
croissant de commission
SELECT nom, prenom, noserv, comm FROM `emp` WHERE noserv=3 ORDER BY comm;
46. Trier les employés (nom, prénom, n° de service, commission) du service 3 par ordre
décroissant de commission, en considérant que celui dont la commission est nulle ne touche
pas de commission.
SELECT nom, prenom, noserv, comm FROM `emp` WHERE noserv=3 AND comm IS NOT NULL ORDER BY comm DESC;
47. Sélectionner le nom, le prénom, l'emploi, le nom du service de l'employé pour tous les
employés.
SELECT nom, prenom, emploi, service FROM `emp`,`serv` WHERE serv.noserv=emp.noserv;

48. Sélectionner le nom, l'emploi, le numéro de service, le nom du service pour tous les
employés.
SELECT nom, prenom, emploi, serv.noserv service FROM `emp`,`serv` WHERE serv.noserv=emp.noserv;
49. Idem en utilisant des alias pour les noms de tables.

SELECT nom AS Name, emploi AS JOB, serv.noserv service FROM `emp`,`serv` WHERE serv.noserv=emp.noserv;

50. Sélectionner le nom, l'emploi, suivis de toutes les colonnes de la table SERV pour tous
les employés.

SELECT nom, emploi, serv.* FROM `emp`,`serv` WHERE serv.noserv=emp.noserv;

51. Sélectionner les nom et date d'embauche des employés suivi des nom et date
d'embauche de leur supérieur pour les employés plus ancien que leur supérieur, dans l'ordre
nom employés, noms supérieurs.

SELECT emp.nom as employe, emp.embauche,emp2.nom as superieur, emp2.embauche 
FROM emp, emp as emp2
WHERE emp2.noemp = emp.sup AND emp.embauche < emp2.embauche 
ORDER BY `employe`, `superieur`;

SELECT e.nom AS `Employés`, e.embauche AS `Embauche des Employés`,sup.nom AS `Superviseurs`, sup.embauche AS `Embauche des superviseurs`
FROM emp e  
INNER JOIN emp sup ON e.sup=sup.noemp
WHERE e.embauche<sup.embauche
ORDER BY e.nom, sup.nom;

52. Sélectionner sans doublon les prénoms des directeurs et « les prénoms des
techniciens du service 1 » avec un UNION

SELECT prenom, emploi
FROM emp
WHERE emploi ="DIRECTEUR"
UNION
SELECT prenom,  emploi 
FROM emp
WHERE emploi="TECHNICIEN" AND noserv=1;

53.  Sélectionner les numéros de services n’ayant pas d’employés sans une
jointure externe

SELECT serv.noserv
from serv
WHERE NOT EXISTS
( SELECT emp.noserv
 FROM emp WHERE serv.noserv=emp.noserv);

 54 : Sélectionner les services ayant au moins un employé.
SELECT serv.noserv from serv WHERE EXISTS ( SELECT emp.noserv FROM emp WHERE serv.noserv=emp.noserv);


55; Sélectionner les employés qui travaillent à lILLE
SELECT prenom,emploi,ville
FROM emp e 
INNER JOIN serv s ON e.noserv=s.noserv
WHERE ville="LILLE";
56. Sélectionner les employés qui ont le même chef que DUBOIS, DUBOIS exclu.
SELECT * FROM `emp` WHERE sup =(SELECT SUP FROM emp WHERE nom="DUBOIS")AND nom!="DUBOIS";

57; Sélectionner les employés embauchés le même jour que DUMONT.

SELECT *
FROM emp
WHERE embauche= (SELECT embauche
FROM `emp`
WHERE nom="DUMONT");
58. Sélectionner les nom et date d'embauche des employés plus anciens que MINET,
dans l’ordre des embauches.
SELECT nom, embauche
FROM emp
WHERE embauche<(SELECT embauche
FROM `emp`
WHERE nom="MINET") 
ORDER BY embauche;
59 Sélectionner le nom, le prénom, la date d’embauche des employés plus anciens
que tous les employés du service N°6. (Attention MIN)

SELECT nom, prenom, embauche FROM emp WHERE embauche< (SELECT MIN(embauche) from emp WHERE noserv=6);

60. Sélectionner le nom, le prénom, le revenu mensuel des employés qui gagnent plus
qu'au moins un employé du service N°3, trier le résultat dans l'ordre croissant des
revenus mensuels.
SELECT prenom, nom, sal FROM emp WHERE sal> (SELECT MIN(sal) FROM emp WHERE noserv=3) ORDER BY sal;
61. Sélectionner les noms, le numéro de service, l’emplois et le salaires des
personnes travaillant dans la même ville que HAVET.
SELECT e.nom, s.ville, s.service, e.emploi, e.sal 
FROM emp e
INNER JOIN serv s ON e.noserv=s.noserv 
WHERE s.ville=(SELECT s.ville 
FROM emp e 
INNER JOIN serv s ON e.noserv=s.noserv
WHERE e.nom="HAVET");

62. : Sélectionner les employés du service 1, ayant le même emploi qu'un employé du
service N°3.
SELECT nom, prenom, emploi 
FROM emp 
WHERE emploi 
IN (SELECT emploi FROM emp WHERE noserv=3) AND noserv=1;
 63; Sélectionner les employés du service 1 dont l'emploi n'existe pas dans le service 3.
SELECT nom, prenom, emploi FROM emp WHERE emploi NOT IN (SELECT emploi FROM emp WHERE noserv=3) AND noserv=1;
64. 
Sélectionner nom, prénom, emploi, salaire pour les employés ayant même emploi et un
salaire supérieur à celui de CARON.

SELECT Nom, emploi,sal
FROM emp
WHERE emploi=(
SELECT emploi
FROM emp
WHERE nom="CARON")
AND sal>(
SELECT sal
FROM emp
WHERE nom="CARON");

65. Sélectionner les employés du service N°1 ayant le même emploi qu'un employé du
service des VENTES. 

SELECT nom, emploi, noserv
FROM emp 
WHERE emploi IN (SELECT emploi 
FROM emp 
INNER JOIN serv ON emp.noserv=serv.noserv
WHERE service="VENTES" ) AND noserv=1;

66. Sélectionner les employés de LILLE ayant le même emploi que RICHARD, trier le
résultat dans l'ordre alphabétique des noms.

SELECT nom, emploi, ville
FROM emp
INNER JOIN serv ON emp.noserv=serv.noserv
WHERE emploi=(
SELECT emploi
FROM emp 
INNER JOIN serv ON emp.noserv=serv.noserv
WHERE nom="RICHARD") AND ville="LILLE" ORDER BY nom;

67 Sélectionner les employés dont le salaire est plus élevé que le salaire moyen de leur
service (moyenne des salaires = avg(sal)), résultats triés par numéros de service.

SELECT *
FROM emp as A
WHERE sal>
(SELECT AVG(sal)
FROM emp as B
where A.noserv = B.noserv)
GROUP BY A.noserv;

SELECT * 
FROM `emp`
WHERE emploi="INFORMATIQUE"
AND YEAR(embauche) IN(
SELECT YEAR(b.embauche) 
FROM `emp` b
WHERE b.emploi="VENDEUR");



e.nom as Employee, e.embauche as `embauche of employe`,e.emploi, m.nom as manager, m.embauche as `embauche of manager`, m.emploi
69; Sélectionner le nom, l’emploi, la ville pour les employés qui ne travaillent pas dans le
même service que leur supérieur hiérarchique direct.

SELECT e.nom as employee, e.emploi AS `job`, s.ville, e.noserv, m.noserv,m.nom, m.emploi
FROM emp e
INNER JOIN emp m ON m.noemp=e.sup
INNER JOIN serv s ON e.noserv=s.noserv
WHERE e.noserv!= m.noserv;

_______________________________________________________
SELECT nom, prenom, emploi, ville, sup 
FROM emp AS e1 
INNER JOIN serv ON e1.noserv = serv.noserv
 WHERE e1.noserv <> (SELECT noserv FROM emp AS e2 WHERE e2.noemp = e1.sup);

70. Sélectionner le nom, le prénom, le service, le revenu des employés qui ont des
subalternes, trier le résultat suivant le revenu décroissant.

SELECT nom, prenom, service, sal 
FROM emp m INNER JOIN serv ON m.noserv = serv.noserv
WHERE m.noemp IN (
SELECT e.sup 
 FROM emp e  WHERE m.noemp=e.sup);

71 Sélectionner le nom, l’emploi, le revenu mensuel (nommé Revenu) avec deux décimales
pour tous les employés, dans l’ordre des revenus décroissants.

SELECT nom, emploi, ROUND(sal,2) as Revenu
FROM emp
ORDER BY Revenu DESC;

73 Sélectionner nom, prénom, emploi, le pourcentage de commission (deux décimales) par
rapport au revenu mensuel ( renommé "% Commissions") , pour tous les vendeurs dans l'ordre
décroissant de ce pourcentage.

SELECT nom, prenom, emploi, sal, comm,round(((comm-sal)/sal)*100 ,2) AS `% Commissions`
FROM emp
WHERE emploi IN(
SELECT emploi
FROM emp
WHERE emploi="VENDEUR")
ORDER BY `% Commissions`;

75 : Sélectionner nom, prénom, emploi, salaire, commissions, revenu mensuel pour les employés
des services 3,5,6
SELECT noserv,nom, prenom, emploi, sal as `Revenu mensuel`, comm
FROM emp
WHERE noserv IN(3,5,6);

76 : Idem pour les employés des services 3,5,6 en remplaçant les noms des colonnes : SAL par
SALAIRE, COMM par COMMISSIONS, SAL+IFNULL(COMM,0) par GAIN_MENSUEL.
SELECT noserv,nom, prenom, emploi, sal as `Salaire`, comm as 'COMMISSIONS', SAL+IFNULL(COMM,0) AS GAIN_MENSUEL
FROM emp
WHERE noserv IN(3,5,6);
77Idem pour les employés des services 3,5,6 en remplaçant GAIN_ MENSUEL par GAIN
MENSUEL
SELECT noserv,nom, prenom, emploi, sal as `Salaire`, comm as 'COMMISSIONS', SAL+IFNULL(COMM,0) AS `GAIN MENSUEL`
FROM emp
WHERE noserv IN(3,5,6);

78 Afficher le nom, l'emploi, les salaires journalier et horaire pour les employés des services
3,5,6 (22 jours/mois et 8 heures/jour), sans arrondi, arrondi au centime près.
/* 78 : Afficher le nom, l'emploi, les salaires journalier et horaire pour les employés des services 3,5,6 (22 jours/mois et 8 heures/jour), sans arrondi, arrondi au centime près.*/
SELECT nom, emploi, serv.noserv, (sal / 22) AS `Salaire journalier`, ROUND((sal / 22), 1) AS `Salaire journalier Arrondi`, (sal / 22 / 8) AS `Salaire Horaire`,
ROUND(( sal / 22 / 8 ) , 1)AS `Salaire Horaire Arrondi`
FROM emp
INNER JOIN serv ON emp.noserv = serv.noserv
WHERE emp.noserv IN (SELECT noserv
                 FROM emp
                 WHERE noserv = 3 OR noserv = 5 OR noserv = 6);
				 
 79 : Idem sans arrondir mais en tronquant. */
SELECT nom, emploi, serv.noserv, (sal / 22) AS `Salaire journalier`, TRUNCATE((sal / 22), 0) AS `Salaire journalier Arrondi`, (sal / 22 / 8) AS `Salaire Horaire`,
TRUNCATE(( sal / 22 / 8 ) , 0)AS `Salaire Horaire Arrondi`
FROM emp
INNER JOIN serv ON emp.noserv = serv.noserv
WHERE emp.noserv IN (SELECT noserv
                 FROM emp
                 WHERE noserv = 3 OR noserv = 5 OR noserv = 6);
				 
81 : Sélectionner nom, emploi pour les employés en ajoutant une colonne "CODE EMPLOI", trier le résultat sur ce code. */
SELECT nom, emploi,

CASE
	WHEN emploi = 'PRESIDENT' THEN '1'
    WHEN emploi = 'DIRECTEUR' THEN '2'
    WHEN emploi = 'COMPTABLE' THEN '3'
    WHEN emploi = 'VENDEUR' THEN '4'
    WHEN emploi = 'TECHNICIEN' THEN '5'
    ELSE 'Ce code emploi n\'existe pas'
END AS `CODE EMPLOI`
From emp  
ORDER BY `CODE EMPLOI` ASC;

83 : Sélectionner les noms des services en affichant que les 5 premiers caractères. */
SELECT SUBSTRING(service, 1, 5) as `du 1er caractère au 5ème`, SUBSTRING(service, 6) as `À partir du 6ème caractère` FROM serv; 

85 : Sélectionner les noms des employés sur 3 colonnes la première en majuscules, la seconde avec l'initiale en majuscule et le reste en minuscules, la troisième en minuscules. */
SELECT nom as `Tout en Maj :-)`, Concat(UCASE(LEFT(nom,1)),LCASE(SUBSTRING(nom,2))) AS `1ère en Maj et reste en Min`, LCASE(SUBSTRING(nom, 1)) as `Tout en Min` from emp; 

87 : Afficher le nombre de lettres qui sert à écrire le nom de chaque service. */
SELECT service, LENGTH(service) as `Nombre de caractères par services` from serv; 

89 : Sélectionner nom, emploi, date d'embauche des employés du service 6. */
SELECT nom, emploi, embauche FROM emp e inner JOIN serv s ON e.noserv = s.noserv WHERE s.noserv = "6"; 

91 : Même chose en écrivant la colonne embauche sous la forme ‘day dd month yyyy'. */
SELECT nom, emploi, DATE_FORMAT(embauche, "%d/%m/%Y") as `embauche` FROM emp e inner JOIN serv s ON e.noserv = s.noserv WHERE s.noserv = "6"; 

93 : Même chose en écrivant la colonne embauche sous la forme ‘yy month(abv) dd'. */
SELECT nom, emploi, DATE_FORMAT(embauche, "%Y %b %D") as `embauche` FROM emp e inner JOIN serv s ON e.noserv = s.noserv WHERE s.noserv = "6"; 

95 : Sélectionner les employés avec leur ancienneté en jours dans l'entreprise. */
SELECT *, DATEDIFF(SYSDATE(), embauche) as `Ancienneté en jours` FROM emp; 

97 : Sélectionner toutes les dates d’embauche majorées de 12 ans. */
SELECT *, embauche + INTERVAL '12' year as `Date d'embauche majorée de 12 ans` FROM emp; 


